#!/usr/bin/env node

/**
 * Script de d√©pannage pour r√©soudre les probl√®mes courants
 *
 * Ce script:
 * 1. Nettoie le cache de Next.js
 * 2. V√©rifie la configuration i18n
 * 3. V√©rifie les redirections
 */

const { execSync } = require('child_process');
const fs = require('fs');
const path = require('path');

// ANSI color codes for console output
const colors = {
  reset: '\x1b[0m',
  bright: '\x1b[1m',
  green: '\x1b[32m',
  yellow: '\x1b[33m',
  blue: '\x1b[34m',
  red: '\x1b[31m',
  magenta: '\x1b[35m',
};

console.log(`${colors.bright}${colors.blue}üîç D√©marrage du d√©pannage...${colors.reset}\n`);

// √âtape 1: Nettoyer le cache
console.log(`${colors.yellow}üßπ Nettoyage du cache...${colors.reset}`);
try {
  execSync('rm -rf .next', { stdio: 'inherit' });
  execSync('rm -rf node_modules/.cache', { stdio: 'inherit' });
  console.log(`${colors.green}‚úÖ Cache nettoy√© avec succ√®s!${colors.reset}\n`);
} catch (error) {
  console.error(
    `${colors.red}‚ùå Erreur lors du nettoyage du cache: ${error.message}${colors.reset}`
  );
}

// √âtape 2: V√©rifier la configuration i18n
console.log(`${colors.yellow}üåê V√©rification de la configuration i18n...${colors.reset}`);
try {
  const i18nConfigPath = path.join(process.cwd(), 'next-i18next.config.js');
  if (fs.existsSync(i18nConfigPath)) {
    const i18nConfig = require(i18nConfigPath);
    console.log(`${colors.blue}‚ÑπÔ∏è Configuration i18n trouv√©e:${colors.reset}`);
    console.log(`   - Langue par d√©faut: ${i18nConfig.i18n.defaultLocale}`);
    console.log(`   - Langues disponibles: ${i18nConfig.i18n.locales.join(', ')}`);
    console.log(
      `   - D√©tection automatique: ${i18nConfig.i18n.localeDetection ? 'Activ√©e' : 'D√©sactiv√©e'}`
    );

    if (i18nConfig.i18n.localeDetection) {
      console.log(
        `${colors.yellow}‚ö†Ô∏è La d√©tection automatique de la langue est activ√©e, ce qui peut causer des redirections infinies.${colors.reset}`
      );
      console.log(
        `   Consid√©rez d√©sactiver cette option en mettant 'localeDetection: false' dans next-i18next.config.js.`
      );
    } else {
      console.log(
        `${colors.green}‚úÖ La d√©tection automatique de la langue est d√©sactiv√©e, ce qui est recommand√©.${colors.reset}`
      );
    }
  } else {
    console.log(`${colors.red}‚ùå Fichier de configuration i18n non trouv√©!${colors.reset}`);
  }
  console.log();
} catch (error) {
  console.error(
    `${colors.red}‚ùå Erreur lors de la v√©rification de la configuration i18n: ${error.message}${colors.reset}\n`
  );
}

// √âtape 3: V√©rifier les redirections dans next.config.js
console.log(`${colors.yellow}üîÑ V√©rification des redirections...${colors.reset}`);
try {
  const nextConfigPath = path.join(process.cwd(), 'next.config.js');
  if (fs.existsSync(nextConfigPath)) {
    const nextConfigContent = fs.readFileSync(nextConfigPath, 'utf8');
    if (nextConfigContent.includes('redirects')) {
      console.log(
        `${colors.yellow}‚ö†Ô∏è Des redirections sont configur√©es dans next.config.js, ce qui pourrait causer des probl√®mes.${colors.reset}`
      );
    } else {
      console.log(
        `${colors.green}‚úÖ Aucune redirection trouv√©e dans next.config.js.${colors.reset}`
      );
    }
  } else {
    console.log(`${colors.red}‚ùå Fichier next.config.js non trouv√©!${colors.reset}`);
  }
  console.log();
} catch (error) {
  console.error(
    `${colors.red}‚ùå Erreur lors de la v√©rification des redirections: ${error.message}${colors.reset}\n`
  );
}

// Conseils pour r√©soudre les probl√®mes de redirection
console.log(
  `${colors.bright}${colors.blue}üîß Conseils pour r√©soudre les probl√®mes de redirection:${colors.reset}`
);
console.log(`1. D√©sactivez la d√©tection automatique de la langue (localeDetection: false)`);
console.log(`2. Supprimez toutes les redirections personnalis√©es dans next.config.js`);
console.log(`3. Assurez-vous que trailingSlash est coh√©rent (true ou false) dans next.config.js`);
console.log(`4. Effacez les cookies de votre navigateur pour le domaine localhost`);
console.log(`5. Red√©marrez le serveur de d√©veloppement avec 'npm run dev:clean'`);
console.log();

console.log(`${colors.bright}${colors.magenta}üéâ D√©pannage termin√©!${colors.reset}`);
console.log(
  `${colors.bright}${colors.blue}üöÄ Ex√©cutez 'npm run dev:clean' pour red√©marrer le serveur de d√©veloppement.${colors.reset}`
);
